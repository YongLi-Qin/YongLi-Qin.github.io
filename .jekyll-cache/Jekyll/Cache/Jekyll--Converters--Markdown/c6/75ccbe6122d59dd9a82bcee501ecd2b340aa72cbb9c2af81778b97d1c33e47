I"/<h1 id="-about-redux">📝 About Redux</h1>

<p>Understand What It Is, Why It Matters, and How It Works</p>

<hr />

<h2 id="-introduction">✅ Introduction</h2>

<p>Redux provides a <strong>centralized store</strong> to hold all <strong>application state</strong>.<br />
Instead of each component managing its own <strong>local state</strong> and passing data via <strong>props</strong>,<br />
Redux allows components to <strong>read</strong> and <strong>update shared global state</strong> in a <strong>consistent and scalable way</strong>.</p>

<p>👉 For example, the <strong>shopping cart</strong> in an e-commerce website is typically managed with Redux,  since it needs to be <strong>accessible and modifiable</strong> from multiple pages like the <em>product list</em>, <em>cart page</em>, and <em>checkout</em>.</p>

<hr />

<h2 id="-core-concepts">🔁 Core Concepts</h2>

<p>Redux has three main building blocks:</p>

<table>
  <thead>
    <tr>
      <th><strong>Concept</strong></th>
      <th><strong>Description</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="highlighter-rouge">Store</code></td>
      <td>Holds the application’s state (like a central database in memory)</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">Action</code></td>
      <td>A plain JavaScript object that describes what happened</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">Reducer</code></td>
      <td>A pure function that determines how state changes in response to an action</td>
    </tr>
  </tbody>
</table>

<hr />
:ET